@model Models.EF.User
@{ var session = (CNWeb.Code.UserSession)Session[CNWeb.Code.Constants.USER_SESSION]; }
<!-- Header-->
<h3 id="id" style="display:none;">@session.UserID</h3>
<div class="header pb-6 d-flex align-items-center" style="min-height: 500px; background-image: url('/Content/img/theme/img-1-1000x600.jpg'); background-size: cover; background-position: center top; ">
    <!-- Mask -->
    <span class="mask bg-gradient-default opacity-8"></span>
    <!-- Header container -->
    <div class="container-fluid d-flex align-items-center">
        <div class="row">
            <div class="col-lg-12 col-md-10">
                @if (session != null)
                {
                    <h1 class="display-2 text-white">Xin chào @session.FullName</h1>
                }
                <div style="display: flex; justify-content: space-around;">
                    <p class="text-white mt-0 mb-5">Kích hoạt xác thực 2 lớp</p>
                    <button style="max-height: 50px; height: 43px; text-align: center;" class="btn btn-neutral small" id="btn--enableTwofactor">Kích hoạt</button>
                </div>
                <button class="btn btn-neutral" id="btn--edit">Sửa thông tin</button>
            </div>
        </div>
    </div>
</div>

<!-- Page content -->
<div class="container-fluid mt--6">
    <div class="row">
        <div class="col-xl-4 order-xl-2">
            <div class="card card-profile">
                <img src="~/Content/img/theme/img-1-1000x600.jpg" alt="Image placeholder" class="card-img-top">
                <div class="row justify-content-center">
                    <div class="col-lg-3 order-lg-2">
                        <div class="card-profile-image">
                            <a href="#">
                                @if (session != null)
                                {

                                                var base64 = Convert.ToBase64String(Convert.FromBase64String(@session.pathImage));
                                                var imgSrc = String.Format("data:image/gif;base64,{0}", base64); 
                                            <img src="@imgSrc" class="rounded-circle"> }
                                        else
                                        {
                            <img src="~/Content/img/theme/team-4ẻwe.jpg" class="rounded-circle">}
                            </a>
                         </div>
                    </div>
                </div>
                <div class="card-header text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4">
                    <div class="d-flex justify-content-between">
                        <a href="#" class="btn btn-sm btn-info  mr-4 ">Kết nối</a>
                        <a href="#" class="btn btn-sm btn-default float-right">Tin nhắn</a>
                    </div>
                </div>
                <div class="card-body pt-0">
                    <div class="row">
                        <div class="col">
                            <div class="card-profile-stats d-flex justify-content-center">
                                <div>
                                    <span class="heading">22</span>
                                    <span class="description">Bạn</span>
                                </div>
                                <div>
                                    <span class="heading">10</span>
                                    <span class="description">Ảnh</span>
                                </div>
                                <div>
                                    <span class="heading">89</span>
                                    <span class="description">Bình luận</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="text-center">
                        @if (session != null)
                        {
                            <h5 class="h3">
                                @session.FullName<span class="font-weight-light">, @session.BirthDay</span>
                            </h5>
                            <div class="h5 font-weight-300">
                                <i class="ni location_pin mr-2"></i>@session.City, @session.Country
                            </div>
                            <div class="h5 mt-4">
                                <i class="ni business_briefcase-24 mr-2"></i>@session.Career
                            </div> 
                         }
                        else
                        {
                            <h5>
                                Jessica Jones <span class="font-weight-light">, 27</span>
                            </h5>
                            <div class="h5 font-weight-300">
                                <i class="ni location_pin mr-2"></i>Hà Nội, Việt Nam
                            </div>
                            <div class="h5 mt-4">
                                <i class="ni business_briefcase-24 mr-2"></i>Quản trị viên
                            </div>
                        }
                        <div>
                            <i class="ni education_hat mr-2"></i>Military Technology Academy
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-8 order-xl-1">
            <div class="card">
                @using (Html.BeginForm("UpdateInforStaff", "Personal", FormMethod.Post, new { id="form-update", role = "form", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, null, new { @class = "alert alert-danger", @style = "height: 80px" })
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col-8">
                                <h3 class="mb-0">Thêm nhân viên </h3>
                            </div>
                            <div class="col-4 text-right">
                                <button type="submit" class="btn btn-sm btn-primary" id="Submit" style="width:100px;">Lưu</button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <h6 class="heading-small text-muted mb-4">Thông tin nhân viên</h6>
                        <div class="pl-lg-4">
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-username">Tên đăng nhập (*)</label>
                                        @Html.TextBoxFor(model => model.UserName, new { @id = "input-username", @class = "form-control", @placeholder = "UserName", @disabled = "true" })
                                        @Html.ValidationMessageFor(model => model.UserName)
                                    </div>
                                </div>
                                <div class="col-lg-6" style="display:none;">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-id">Id</label>
                                        @Html.TextBoxFor(model => model.ID, new { @type="number", @id = "input-id", @class = "form-control", @Value = @session.UserID })
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-password">Password (*)</label>
                                        @Html.TextBoxFor(model => model.Password, new { @type = "password", @id = "input-password", @class = "form-control", @placeholder = "PassWord", @disabled = "true" })
                                        @Html.ValidationMessageFor(model => model.Password)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-full-name">Họ và tên (*)</label>
                                        @Html.TextBoxFor(model => model.FullName, new { @id = "input-full-name", @class = "form-control", @placeholder = "Full Name", @disabled = "true" })
                                        @Html.ValidationMessageFor(model => model.FullName)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-email">Email address</label>
                                        @Html.TextBoxFor(model => model.Email, new { @type = "email", @id = "input-email", @class = "form-control", @placeholder = "longle@example.com", @disabled = "true" })
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-birthday">Ngày tháng năm sinh (*)</label>
                                        <input type="date"  id="input-unix-birthday" class="form-control" />
                                        @Html.TextBoxFor(model => model.BirthDay, new { @id = "input-birthday", @class = "form-control", @style = "display:none;"})
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-career">Nghề nghiệp</label>
                                        @Html.TextBoxFor(model => model.Career, new { @id = "input-career", @class = "form-control", @placeholder = "Học sinh/Sinh viên", @disabled = "true" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr class="my-4" />
                        <!-- Address -->
                        <h6 class="heading-small text-muted mb-4">Thông tin liên lạc</h6>
                        <div class="pl-lg-4">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-address">Địa chỉ</label>
                                        @Html.TextBoxFor(model => model.Address, new { @id = "input-address", @class = "form-control", @placeholder = "236 Hoàng Quốc Việt", @disabled = "true" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-city">Thành phố</label>
                                        @Html.TextBoxFor(model => model.City, new { @id = "input-city", @class = "form-control", @placeholder = "Hà Nội", @disabled = "true" })
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-country">Quốc gia</label>
                                        @Html.TextBoxFor(model => model.Country, new { @id = "input-country", @class = "form-control", @placeholder = "Việt Nam", @disabled = "true" })
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-postal-code">Số điện thoại</label>
                                        @Html.TextBoxFor(model => model.PhoneNumber, new { @type = "text", @id = "input-postal-code", @class = "form-control", @placeholder = "Số điện thoại", @disabled = "true" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr class="my-4" />
                        <!-- Description -->
                        <h6 class="heading-small text-muted mb-4">Mô tả bản thân</h6>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label class="form-control-label" for="input-file-image">Hình ảnh đính kèm</label>
                                    @Html.TextBox("file", "", new { @type = "file", @id = "input-file-image", @class = "form-control" })
                                    @Html.TextBoxFor(model => model.Image, new { @style = "display:none;", @id = "input-image" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label class="form-control-label" for="input-position">Chức vụ</label>
                                    @Html.DropDownListFor(model => model.IDChucVu, null, new { @id = "input-position", @class = "form-control", @disabled = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label class="form-control-label">Mô tả bản thân</label>
                                    @Html.TextAreaFor(model => model.Description, new { @rows = "4", @class = "form-control", @placeholder = "Đẹp trai, hòa đồng...", @disabled = "true" })
                                </div>
                            </div>
                        </div>
                    </div>
                 }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    document.getElementById("Submit").disabled = true;
    if ('@session.RequiresVerification' == true) document.getElementById('btn--enableTwofactor').innerText = "Hủy kích hoạt";
    else if ('@session.RequiresVerification' == false) document.getElementById('btn--enableTwofactor').innerText = "Kích hoạt";

    // Binding string path file is chosen to textbox
    $('input[type=file]').change(function () {
        document.getElementById('input-image').value = this.files[0].name;
    });

    // Convert date to UnixTimeStamp for db
    $('input[type=date]').change(function () {
        var date = this.value;
        const UnixTime = new Date(date).getTime() / 1000
        document.getElementById('input-birthday').value = UnixTime;
    });

    // function convert to date for binding Edit
    function UnixToDate(unixtime) {
        const unixTimestamp = unixtime;
        const milliseconds = unixTimestamp * 1000 // 1575909015000
        const dateObject = new Date(milliseconds)
        const humanDateFormat = dateObject.toLocaleString() //2019-12-9 10:30:15
        return humanDateFormat;
    }

    // function help for binding data user
    function BindingInforEdit(username, password, fullname, email, birthday,
                career, address, city, country, phonenumber, position, description) {
        document.getElementById('input-username').value = username;
        document.getElementById('input-password').value = password;
        document.getElementById('input-full-name').value = fullname;
        document.getElementById('input-email').value = email;
        let date1 = UnixToDate(birthday);
        var date2 = new Date(date1);
        document.getElementById('input-unix-birthday').value = date2.toISOString().split('T')[0];
        document.getElementById('input-career').value = career;
        document.getElementById('input-address').value = address;
        document.getElementById('input-city').value = city;
        document.getElementById('input-country').value = country;
        //let Postalcode = parseInt(postalcode, 10);
        document.getElementById('input-postal-code').value = phonenumber;
        document.getElementById('input-position').value = position;
        document.getElementById('Description').value = description;
    };

    // function enable text for edit
    function EnableText() {
        document.getElementById('input-username').disabled = false;
        document.getElementById('input-password').disabled = false;
        document.getElementById('input-full-name').disabled = false;
        document.getElementById('input-email').disabled = false;
        document.getElementById('input-unix-birthday').disabled = false;
        document.getElementById('input-career').disabled = false;
        document.getElementById('input-address').disabled = false;
        document.getElementById('input-city').disabled = false;
        document.getElementById('input-country').disabled = false;
        document.getElementById('input-postal-code').disabled = false;
        document.getElementById('input-position').disabled = false;
        document.getElementById('Description').disabled = false;
    }
    // Request Get Information Personal Staff
    $.ajax({
        type: 'POST',
        dataType: "json",
        contentType: 'application/json',
        processData: false,
        data: JSON.stringify({ id: $('#id').text() }),
        url: "/Admin/Personal/PersonalInfor",
        success: function (data) {
            console.log(data);
            BindingInforEdit(data.UserName, data.Password, data.FullName, data.Email, data.BirthDay, data.Career,
                data.Address, data.City, data.Country, data.PhoneNumber, data.IDChucVu, data.Description);
        },
        error: function (jqXHR, textStatus, errorThrown) {
            console.log(errorThrown);
        }
    })

    document.getElementById("btn--edit").addEventListener('click', (e) => {
        document.getElementById("Submit").disabled = false;
        EnableText();
    })

    // submit form
    $("form#form-update").submit((e) => {
        e.preventDefault();

        var Data = $("#form-update").serialize();
        //var date = document.getElementById("input-unix-birthday").value;
        //const UnixTime = new Date(date).getTime() / 1000
        //document.getElementById('input-birthday').value = UnixTime;

        //var fileUpload = $("#input-file-image").get(0)
        //var files = $("#input-file-image").files;

        //var Data = new FormData(this[0]);
        //Data.append('UserName', $("#input-username").val());
        //Data.append('Password', $("#input-password").val());
        //Data.append('FullName', $("#input-full-name").val());
        //Data.append('BirthDay', $("#input-birthday").val());
        //Data.append('Career', $("#input-career").val());
        //Data.append('Address', $("#input-address").val());
        //Data.append('City', $("#input-city").val());
        //Data.append('Country', $("#input-country").val());
        //Data.append('PostalCode', $("#input-postal-code").val());
        //Data.append('City', $("#input-city").val());
        //Data.append('file', files[0]);
        //Data.append('Image', $("#input-image").val());
        //Data.append('IDChucVu', $("#input-position").val());
        //Data.append('Description', $("#Description").val());

        $.ajax({
            url: '@Url.Action("UpdateInforStaff", "Personal")',
            type: 'POST',
            data: Data,
            enctype: "multipart/form-data",
            processData: false,
            success: function (data) {
                if (data.message == "Success!!") {
                    swal("Alert info", data.data, "success");
                    $.get("/Admin/ListStaff/ListStaff", (data) => {
                        $("#body").html(data);
                    })
                } else {
                    swal("Alert info", data.data, "error");
                }
            },
            error: function (e) {
                swal("Alert info", e, "error");
            }
        })
    })

    document.getElementById("btn--enableTwofactor").addEventListener('click', (e) => {
        $.ajax({
            url: "/User/TwoFactor", // gửi ajax đến file result.php
            type: "post", // chọn phương thức gửi là post
            data: { // Danh sách các thuộc tính sẽ gửi đi
                id: '@session.UserID',
                status: '@session.RequiresVerification'
            },
            success: function (result) {
                if (result == "Success") swal("Thông báo", "Kích hoạt thành công", "success");
            }
        });
    })
</script>